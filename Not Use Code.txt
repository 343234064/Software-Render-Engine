	MAT44 Matrix4x4::operator * (const MAT44 & mat) const
	{
	    FLOAT d[15];
	    FLOAT D[7][2][2];
        //D1  18
        d[7]=_21+_43; d[8]=_11+_33;
        d[9]=_12+_34; d[10]=_22+_44;
        d[11]=mat._11+mat._33; d[12]=mat._12+mat._34;
        d[13]=mat._21+mat._43; d[14]=mat._22+mat._44;
        d[0]=(d[8] + d[10])*(d[11] + d[14]);
        d[1]=(d[7] + d[10])*d[11];
        d[2]=d[8]*(d[12] - d[14]);
        d[3]=d[10]*(d[13] - d[11]);
        d[4]=(d[8] + d[9])*d[14];
	    d[5]=(d[7] - d[8])*(d[11] + d[12]);
	    d[6]=(d[9] - d[10])*(d[13] + d[14]);


	    D[0][0][0]=d[0]+d[3]-d[4]+d[6];
	    D[0][0][1]=d[2]+d[4];
	    D[0][1][0]=d[1]+d[3];
	    D[0][1][1]=d[0]+d[2]-d[1]+d[5];
	    //D2 14
        d[7]=_31+_33; d[8]=_42+_44;
        d[9]=_41+_43; d[10]=_32+_34;
        d[0]=(d[7] + d[8])*(mat._11 + mat._22);
        d[1]=(d[9] + d[8])*(mat._11);
        d[2]= d[7]*(mat._12 - mat._22);
        d[3]= d[8]*(mat._21 - mat._11);
        d[4]=(d[7] + d[10])*(mat._22);
        d[5]=(d[9] - d[7])*(mat._11 + mat._12);
	    d[6]=(d[10] - d[8])*(mat._21 + mat._22);

	    D[1][0][0]=d[0]+d[3]-d[4]+d[6];
	    D[1][0][1]=d[2]+d[4];
	    D[1][1][0]=d[1]+d[3];
	    D[1][1][1]=d[0]+d[2]-d[1]+d[5];
	    //D3 14
	    d[7]=mat._13-mat._33; d[8]=mat._14-mat._34;
	    d[9]=mat._24-mat._44; d[10]=mat._23-mat._43;
        d[0]=(_11+_22)*(d[7]+d[9]);
        d[1]=(_21+_22)*(d[7]);
        d[2]=(_11)*(d[8]-d[9]);
        d[3]=(_22)*(d[10]-d[7]);
        d[4]=(_11+_12)*(d[9]);
	    d[5]=(_21-_11)*(d[7]+d[8]);
	    d[6]=(_12-_22)*(d[10]+d[9]);

	    D[2][0][0]=d[0]+d[3]-d[4]+d[6];
	    D[2][0][1]=d[2]+d[4];
	    D[2][1][0]=d[1]+d[3];
	    D[2][1][1]=d[0]+d[2]-d[1]+d[5];
	    //D4 14
        d[7]=mat._31-mat._11; d[8]=mat._42-mat._22;
        d[9]=mat._32-mat._12; d[10]=mat._41-mat._21;
        d[0]=(_33+_44)*(d[7]+d[8]);
        d[1]=(_43+_44)*(d[7]);
        d[2]=(_33)*(d[9]-d[8]);
        d[3]=(_43)*(d[10]-d[7]);
        d[4]=(_33+_34)*(d[9]);
	    d[5]=(_43-_33)*(d[7]+d[9]);
	    d[6]=(_34-_44)*(d[10]+d[8]);

	    D[3][0][0]=d[0]+d[3]-d[4]+d[6];
	    D[3][0][1]=d[2]+d[4];
	    D[3][1][0]=d[1]+d[3];
	    D[3][1][1]=d[0]+d[2]-d[1]+d[5];
	    //D5 14
	    d[7]=_11+_13; d[8]=_12+_14;
	    d[9]=_21+_23; d[10]=_22+_24;
        d[0]=(d[7]+d[10])*(mat._33+mat._44);
        d[1]=(d[9]+d[10])*(mat._33);
        d[2]= d[7]*(mat._34-mat._44);
        d[3]= d[10]*(mat._43-mat._33);
        d[4]=(d[7]+d[8])*(mat._44);
	    d[5]=(d[9]-d[7])*(mat._33+mat._34);
	    d[6]=(d[8]-d[10])*(mat._43+mat._44);

	    D[4][0][0]=d[0]+d[3]-d[4]+d[6];
	    D[4][0][1]=d[2]+d[4];
	    D[4][1][0]=d[1]+d[3];
	    D[4][1][1]=d[0]+d[2]-d[1]+d[5];
	    //D6 18
	    d[7]=_31-_11; d[8]=_32-_12;
	    d[9]=_41-_21; d[10]=_42-_22;
        d[11]=mat._11+mat._13; d[12]=mat._12+mat._14;
	    d[13]=mat._21+mat._23; d[14]=mat._22+mat._24;
        d[0]=(d[7]+_42-_22)*(d[11]+d[14]);
        d[1]=(d[9]+d[10])* d[11];
        d[2]= d[7]*(d[12]-d[14]);
        d[3]= d[10]*(d[13]-d[11]);
        d[4]=(d[7]+d[8])*(d[14]);
	    d[5]=(d[9]-d[7])*(d[11]+d[12]);
	    d[6]=(d[8]-d[10])*(d[13]+d[14]);

	    D[5][0][0]=d[0]+d[3]-d[4]+d[6];
	    D[5][0][1]=d[2]+d[4];
	    D[5][1][0]=d[1]+d[3];
	    D[5][1][1]=d[0]+d[2]-d[1]+d[5];
	    //D7 18
	    d[7]=_13-_33; d[8]=_14-_34;
	    d[9]=_23-_43; d[10]=_24-_44;
        d[11]=mat._31+mat._33; d[12]=mat._32+mat._34;
	    d[13]=mat._41+mat._43; d[14]=mat._42+mat._44;
        d[0]=(d[7]+d[10])*(d[11]+d[14]);
        d[1]=(d[9]+d[10])*(d[11]);
        d[2]= d[7]*(d[12]-d[14]);
        d[3]= d[10]*(d[13]-d[11]);
        d[4]=(d[7]+d[8])* d[14];
	    d[5]=(d[9]-d[7])*(d[11]+d[12]);
	    d[6]=(d[8]-d[10])*(d[13]+d[14]);

	    D[6][0][0]=d[0]+d[3]-d[4]+d[6];
	    D[6][0][1]=d[2]+d[4];
	    D[6][1][0]=d[1]+d[3];
	    D[6][1][1]=d[0]+d[2]-d[1]+d[5];

	    //output
        d[0]=D[0][0][0]+D[3][0][0]-D[4][0][0]+D[6][0][0];
        d[1]=D[0][0][1]+D[3][0][1]-D[4][0][1]+D[6][0][1];
        d[2]=D[0][1][0]+D[3][1][0]-D[4][1][0]+D[6][1][0];
        d[3]=D[0][1][1]+D[3][1][1]-D[4][1][1]+D[6][1][1];

	    d[4]=D[0][0][0]+D[2][0][0]-D[1][0][0]+D[5][0][0];
        d[5]=D[0][0][1]+D[2][0][1]-D[1][0][1]+D[5][0][1];
        d[6]=D[0][1][0]+D[2][1][0]-D[1][1][0]+D[5][1][0];
        d[7]=D[0][1][1]+D[2][1][1]-D[1][1][1]+D[5][1][1];


        return MAT44(d[0], d[1], D[2][0][0]+D[4][0][0], D[2][0][1]+D[4][0][1],
                     d[2], d[3], D[2][1][0]+D[4][1][0], D[2][1][1]+D[4][1][1],
                     D[1][0][0]+D[3][0][0], D[1][0][1]+D[3][0][1], d[4], d[5],
                     D[1][1][0]+D[3][1][0], D[1][1][1]+D[3][1][1], d[6], d[7]);

      }